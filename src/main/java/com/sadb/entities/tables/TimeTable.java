/*
 * This file is generated by jOOQ.
 */
package com.sadb.entities.tables;


import com.sadb.entities.Indexes;
import com.sadb.entities.Keys;
import com.sadb.entities.Public;
import com.sadb.entities.tables.records.TimeTableRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TimeTable extends TableImpl<TimeTableRecord> {

    private static final long serialVersionUID = -97051649;

    /**
     * The reference instance of <code>public.time_table</code>
     */
    public static final TimeTable TIME_TABLE = new TimeTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TimeTableRecord> getRecordType() {
        return TimeTableRecord.class;
    }

    /**
     * The column <code>public.time_table.week_day_id</code>.
     */
    public final TableField<TimeTableRecord, Integer> WEEK_DAY_ID = createField("week_day_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.time_table.occupation_id</code>.
     */
    public final TableField<TimeTableRecord, Integer> OCCUPATION_ID = createField("occupation_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.time_table.odevity_id</code>.
     */
    public final TableField<TimeTableRecord, Integer> ODEVITY_ID = createField("odevity_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.time_table.variant_occupation_id</code>.
     */
    public final TableField<TimeTableRecord, Integer> VARIANT_OCCUPATION_ID = createField("variant_occupation_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.time_table.class_id</code>.
     */
    public final TableField<TimeTableRecord, Integer> CLASS_ID = createField("class_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.time_table.group_id</code>.
     */
    public final TableField<TimeTableRecord, Integer> GROUP_ID = createField("group_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.time_table.discipline_id</code>.
     */
    public final TableField<TimeTableRecord, Integer> DISCIPLINE_ID = createField("discipline_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.time_table</code> table reference
     */
    public TimeTable() {
        this(DSL.name("time_table"), null);
    }

    /**
     * Create an aliased <code>public.time_table</code> table reference
     */
    public TimeTable(String alias) {
        this(DSL.name(alias), TIME_TABLE);
    }

    /**
     * Create an aliased <code>public.time_table</code> table reference
     */
    public TimeTable(Name alias) {
        this(alias, TIME_TABLE);
    }

    private TimeTable(Name alias, Table<TimeTableRecord> aliased) {
        this(alias, aliased, null);
    }

    private TimeTable(Name alias, Table<TimeTableRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TimeTable(Table<O> child, ForeignKey<O, TimeTableRecord> key) {
        super(child, key, TIME_TABLE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.XPK_TIME_TABLE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TimeTableRecord> getPrimaryKey() {
        return Keys.XPK_TIME_TABLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TimeTableRecord>> getKeys() {
        return Arrays.<UniqueKey<TimeTableRecord>>asList(Keys.XPK_TIME_TABLE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TimeTableRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TimeTableRecord, ?>>asList(Keys.TIME_TABLE__R_19, Keys.TIME_TABLE__R_21, Keys.TIME_TABLE__R_20, Keys.TIME_TABLE__R_22, Keys.TIME_TABLE__R_23, Keys.TIME_TABLE__R_24, Keys.TIME_TABLE__R_25);
    }

    public WeekDay weekDay() {
        return new WeekDay(this, Keys.TIME_TABLE__R_19);
    }

    public Occupation occupation() {
        return new Occupation(this, Keys.TIME_TABLE__R_21);
    }

    public OdevityWeek odevityWeek() {
        return new OdevityWeek(this, Keys.TIME_TABLE__R_20);
    }

    public VariantOccupation variantOccupation() {
        return new VariantOccupation(this, Keys.TIME_TABLE__R_22);
    }

    public ClassRoom classRoom() {
        return new ClassRoom(this, Keys.TIME_TABLE__R_23);
    }

    public Groups groups() {
        return new Groups(this, Keys.TIME_TABLE__R_24);
    }

    public Discipline discipline() {
        return new Discipline(this, Keys.TIME_TABLE__R_25);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TimeTable as(String alias) {
        return new TimeTable(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TimeTable as(Name alias) {
        return new TimeTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TimeTable rename(String name) {
        return new TimeTable(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TimeTable rename(Name name) {
        return new TimeTable(name, null);
    }
}
